React Cheatsheet & NOTES
========================

node -v == node version
npm -v  == npm version


REACT ENVIRONMENT SET-UP
==============================

    #01 - update node to latest version
    -----------------------------
    npm install node@latest -g



    #02 - update npm to latest version
    -----------------------------
    npm install node@latest -g



    #03 - install yarn
    -------------
    npm i -g yarn


    #04 - install live-server
    --------------------
    npm i -g live-server

    *05 - CREATE Project directory with sub-folder "public"
    *06 - CREATE HTML - index.HTML in the project directory root
    #07 -  RUN live-server in the public directory in the command line
            live-server public

    #08 - In index.html create a div with id='app'
        <div id='app'></div>


    #09 - Link(load) in React libraries scripts into bottom of index.html
                <!--REACT LIBRARIES-->
        <script src="https://unpkg.com/react@16.0.0/umd/react.development.js"></script>
        <script src="https://unpkg.com/react-dom@16.0.0/umd/react-dom.development.js"></script>
        <!-- CUSTOM SCRIPTS-->
        <script src="/scripts/app.js"></script>

    #10 - Create app.js file inside a new script directory
        A. - Type console.log('App.js is running!'); into App.js
        B. Open DevTools console and see if it has the console log in it.
        C. RENDER ReactDOM template into the bottom of app.js
            ReactDOM.render(template, appRoot);


    #11 - INSTALL BABEL 6.24.1 ( specific version for course only)
        npm i -g babel-cli@6.24.1
        ***BABEL CONVERTS NEW version Javascript code into old version Javascript***
        ?type babel --version to check if it was installed

        !A) Outline & Record all Project dependencies
                Type "Yarn Init"

        !B) Install Babel Presets & env
            yarn add babel-preset-react@6.24.1 babel-preset-env@1.5.2

        !C)Check package.json
            To see if dependencies are installed

            *All node modules can be re-installed   as long as package.json is there
            *Never change yarn.lock it a list of dependencies.
            *src/app.js = contains actual jsx while public/app.js is autogenerated with babel
        !D) Tell Babel where to compile Babel, where the output file is and presets
            babel src/app.js --out-file=public/scripts/app.js --presets=env,react --watch
            ! REMOVED THE env call = new versions auto include env
            babel src/app.js --out-file=public/scripts/app.js --presets=react --watch
            *--watch keeps actively watching the file

# To Re-install all dependencies
    yarn install

    #EXPLORING JSX - SECTION 3

    *All JSX elements have to be in a wrapper
    var template =
    <div>
        <h1>Indecision app</h1>
        <p>This is some info</p>
    </div>;

    *All JSX expressions should not be static
    <h1>Reign Westry </h1>
    * it should be variables
    var userName='Reign Westry';
    <h1>{userName}</h1>

    *{userName} = Javascript Expressions

    *javascript OBJECT
    REFERENCE data through a OBJECT
    --------------------------------

var user = {
    name: 'Reign',
    age: 35,
    location: 'Atanta'
};

//note ES6 imports
    1. ADD FILES
        A) import ' filename'

COMPONENTS
===========

+ One component per file